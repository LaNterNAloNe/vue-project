{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"main-content\"\n};\nconst _hoisted_3 = {\n  class: \"upload-section\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"upload-prompt\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"file-details\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  class: \"display-section\"\n};\nconst _hoisted_8 = {\n  class: \"subtitle-display-container\"\n};\nconst _hoisted_9 = {\n  class: \"subtitle-area\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"subtitle-placeholder\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"subtitle-list\"\n};\nconst _hoisted_12 = {\n  class: \"timestamp\"\n};\nconst _hoisted_13 = {\n  class: \"original\"\n};\nconst _hoisted_14 = {\n  class: \"translated\"\n};\nconst _hoisted_15 = {\n  class: \"subtitle-display-container\"\n};\nconst _hoisted_16 = {\n  class: \"subtitle-area\"\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"subtitle-placeholder\"\n};\nconst _hoisted_18 = {\n  key: 1,\n  class: \"subtitle-placeholder\"\n};\nconst _hoisted_19 = {\n  key: 2,\n  class: \"subtitle-list\"\n};\nconst _hoisted_20 = {\n  class: \"timestamp\"\n};\nconst _hoisted_21 = {\n  class: \"text-original\"\n};\nconst _hoisted_22 = {\n  class: \"text-translated\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[13] || (_cache[13] = _createElementVNode(\"header\", {\n    class: \"app-header\"\n  }, [_createElementVNode(\"h1\", null, \"中国网络微短剧英译智能体\"), _createElementVNode(\"p\", {\n    class: \"subtitle\"\n  }, \"AI-Powered Chinese Short Drama Translation Agent\")], -1 /* CACHED */)), _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"section\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"upload-box\",\n    onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.handleDrop && $setup.handleDrop(...args), [\"prevent\"])),\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.triggerFileUpload && $setup.triggerFileUpload(...args))\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"file-upload\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $setup.handleFileChange && $setup.handleFileChange(...args)),\n    accept: \".srt,.txt\",\n    ref: \"fileInput\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), !$setup.File ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[6] || (_cache[6] = [_createStaticVNode(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"64\\\" height=\\\"64\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"upload-icon\\\"><path d=\\\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\\\"></path><polyline points=\\\"17 8 12 3 7 8\\\"></polyline><line x1=\\\"12\\\" y1=\\\"3\\\" x2=\\\"12\\\" y2=\\\"15\\\"></line></svg><p>将文本或字幕文件拖拽到此处</p><small class=\\\"file-info\\\">支持 txt , srt 等格式</small>\", 3)]))) : _createCommentVNode(\"v-if\", true), $setup.File ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[7] || (_cache[7] = _createElementVNode(\"h4\", null, \"已选择文件:\", -1 /* CACHED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.File.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.startProcessing && $setup.startProcessing(...args), [\"stop\"])),\n    class: \"process-button\",\n    disabled: $setup.isProcessing\n  }, _toDisplayString($setup.isProcessing ? '处理中...' : '开始翻译'), 9 /* TEXT, PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"section\", _hoisted_7, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", {\n    class: \"tight-title\"\n  }, \"源字幕预览 (Original Subtitle Preview)\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [$setup.File === null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[8] || (_cache[8] = [_createElementVNode(\"p\", null, \"上传的文件或字幕内容将在此显示...\", -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.original_subtitles, (subtitle, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"subtitle-item\"\n    }, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString(subtitle.timestamp), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_13, _toDisplayString(subtitle.original), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_14, _toDisplayString(subtitle.translated), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]))])]), _cache[12] || (_cache[12] = _createElementVNode(\"h3\", {\n    class: \"tight-title\"\n  }, \"翻译字幕预览 (Translated Subtitle Preview)\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [!$setup.isTranslated ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createCommentVNode(\" 此处应判断是否完成翻译（翻译结果包含无文本【特殊情况】） \"), _cache[9] || (_cache[9] = _createElementVNode(\"p\", null, \"翻译生成的字幕将在此显示...\", -1 /* CACHED */))])) : _createCommentVNode(\"v-if\", true), $setup.translated_subtitles.length === 0 && $setup.isTranslated ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _cache[10] || (_cache[10] = [_createElementVNode(\"p\", null, \"暂无翻译结果\", -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.translated_subtitles, (subtitle, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"subtitle-item\"\n    }, [_createElementVNode(\"span\", _hoisted_20, _toDisplayString(subtitle.timestamp), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_21, _toDisplayString(subtitle.original), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_22, _toDisplayString(subtitle.translated), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]))]), $setup.isTranslated ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[5] || (_cache[5] = $event => $setup.downloadSRT($setup.translated_subtitles)),\n    class: \"process-button\"\n  }, \"下载字幕文件\")) : _createCommentVNode(\"v-if\", true)])])])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onDragover","_cache","_withModifiers","onDrop","args","$setup","handleDrop","onClick","triggerFileUpload","type","onChange","handleFileChange","accept","ref","style","File","_hoisted_4","_hoisted_5","_toDisplayString","name","startProcessing","disabled","isProcessing","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_Fragment","_renderList","original_subtitles","subtitle","index","key","_hoisted_12","timestamp","_hoisted_13","original","_hoisted_14","translated","_hoisted_15","_hoisted_16","isTranslated","_hoisted_17","_createCommentVNode","translated_subtitles","length","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","$event","downloadSRT"],"sources":["C:\\NewFiles\\Vue3\\vue-project\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app-container\">\r\n    <header class=\"app-header\">\r\n      <h1>中国网络微短剧英译智能体</h1>\r\n      <p class=\"subtitle\">AI-Powered Chinese Short Drama Translation Agent</p>\r\n    </header>\r\n\r\n    <main class=\"main-content\">\r\n      <section class=\"upload-section\">\r\n        <div class=\"upload-box\" @dragover.prevent @drop.prevent=\"handleDrop\" @click=\"triggerFileUpload\">\r\n          <input type=\"file\" id=\"file-upload\" @change=\"handleFileChange\" accept=\".srt,.txt\" ref=\"fileInput\" style=\"display: none;\">\r\n          \r\n          <div v-if=\"!File\" class=\"upload-prompt\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"upload-icon\"><path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"17 8 12 3 7 8\"></polyline><line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line></svg>\r\n            <p>将文本或字幕文件拖拽到此处</p>\r\n            <small class=\"file-info\">支持 txt , srt 等格式</small>\r\n          </div>\r\n\r\n          <div v-if=\"File\" class=\"file-details\">\r\n            <h4>已选择文件:</h4>\r\n            <p>{{ File.name }}</p>\r\n            <button @click.stop=\"startProcessing\" class=\"process-button\" :disabled=\"isProcessing\">\r\n              {{ isProcessing ? '处理中...' : '开始翻译' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"display-section\">\r\n        <h3 class=\"tight-title\">源字幕预览 (Original Subtitle Preview)</h3>\r\n        <div class=\"subtitle-display-container\">\r\n          <div class=\"subtitle-area\">\r\n            <div v-if=\"File === null\" class=\"subtitle-placeholder\"> \r\n              <p>上传的文件或字幕内容将在此显示...</p>\r\n            </div>\r\n\r\n            <ul v-else class=\"subtitle-list\">\r\n              <li v-for=\"(subtitle, index) in original_subtitles\" :key=\"index\" class=\"subtitle-item\">\r\n                <span class=\"timestamp\">{{ subtitle.timestamp }}</span>\r\n                <p class=\"original\">{{ subtitle.original }}</p>\r\n                <p class=\"translated\">{{ subtitle.translated }}</p>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <h3 class=\"tight-title\">翻译字幕预览 (Translated Subtitle Preview)</h3>\r\n        <div class=\"subtitle-display-container\">\r\n          <div class=\"subtitle-area\">\r\n\r\n            <div v-if=\"!isTranslated\" class=\"subtitle-placeholder\"> \r\n            <!-- 此处应判断是否完成翻译（翻译结果包含无文本【特殊情况】） -->\r\n              <p>翻译生成的字幕将在此显示...</p>\r\n            </div>\r\n\r\n            <div v-if=\"translated_subtitles.length === 0 && isTranslated\" class=\"subtitle-placeholder\"> \r\n              <p>暂无翻译结果</p>\r\n            </div>\r\n\r\n            <ul v-else class=\"subtitle-list\">\r\n              <li v-for=\"(subtitle, index) in translated_subtitles\" :key=\"index\" class=\"subtitle-item\">\r\n                <span class=\"timestamp\">{{ subtitle.timestamp }}</span>\r\n                <p class=\"text-original\">{{ subtitle.original }}</p>\r\n                <p class=\"text-translated\">{{ subtitle.translated }}</p>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n          <button v-if=\"isTranslated\" @click=\"downloadSRT(translated_subtitles)\" class=\"process-button\">下载字幕文件</button>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ElMessage } from 'element-plus';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  setup() {\r\n    const fileInput = ref(null);\r\n    const File = ref(null);\r\n    const videoSrc = ref('');\r\n    const isProcessing = ref(false);\r\n    const isTranslated = ref(false);\r\n    \r\n    // Placeholder for subtitle data\r\n    const original_subtitles = ref([\r\n      // Example data structure\r\n      // { timestamp: '00:00:01,234 --> 00:00:03,456', original: '你好！', translated: 'Hello!' },\r\n    ]);\r\n    const translated_subtitles = ref([\r\n      // Example data structure\r\n      // { timestamp: '00:00:01,234 --> 00:00:03,456', original: '你好！', translated: 'Hello!' },\r\n      // { timestamp: '00:00:04,000 --> 00:00:06,789', original: '今天天气真好。', translated: 'The weather is great today.' }\r\n    ]);\r\n\r\n    const triggerFileUpload = () => {\r\n      fileInput.value.click();\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n    \r\n        const fileName = file.name.toLowerCase();\r\n        if (fileName.endsWith('.srt') || fileName.endsWith('.txt')){\r\n        File.value = file;\r\n        readSubtitleFile(file); // 👈 添加解析方法\r\n        } else {\r\n        ElMessage.warning('请选择一个有效的字幕文件（.srt 或 .txt）！');\r\n        }\r\n    };\r\n\r\n    const readSubtitleFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n        const content = reader.result;\r\n        original_subtitles.value = parseSRT(content); // 👈 解析为结构化数据\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    const parseSRT = (text) => {\r\n        const blocks = text.trim().split(/\\n{2,}/);\r\n        return blocks.map(block => {\r\n            const lines = block.split('\\n');\r\n            const timestamp = lines[1];\r\n            const original = lines.slice(2).join(' ');\r\n            return {\r\n                timestamp,\r\n                original,\r\n                translated: '' // 后续翻译填充\r\n            };\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const handleDrop = (event) => {\r\n        const file = event.dataTransfer.files[0];\r\n        if (file && file.type.startsWith('video/')) {\r\n            File.value = file;\r\n            videoSrc.value = URL.createObjectURL(file);\r\n        } else {\r\n            ElMessage.warning('请拖入一个有效的视频文件！');\r\n        }\r\n    };\r\n\r\n    const startProcessing = () => {\r\n      if (!File.value) {\r\n        ElMessage.warning('请先选择一个文件！');\r\n        return;\r\n      }\r\n      isProcessing.value = true;\r\n      console.log('开始处理文件:', File.value.name);\r\n      \r\n      // --- API Integration Placeholder ---\r\n      // 1. Upload file to server\r\n      // 2. Poll for processing status\r\n      // 3. On success, fetch subtitle data\r\n      // ------------------------------------\r\n\r\n      // Simulate API call and receiving data\r\n      setTimeout(() => {\r\n        translated_subtitles.value = [\r\n          { timestamp: '00:00:01,234 --> 00:00:03,456', original: '你好！', translated: 'Hello!' },\r\n          { timestamp: '00:00:04,000 --> 00:00:06,789', original: '今天天气真好。', translated: 'The weather is great today.' },\r\n          { timestamp: '00:00:07,100 --> 00:00:09,500', original: '我们去公园吧。', translated: \"Let's go to the park.\" }\r\n        ];\r\n        isProcessing.value = false;\r\n        isTranslated.value = true;\r\n        ElMessage.success('处理完成');\r\n      }, 3000); // Simulate a 3-second processing time\r\n    };\r\n\r\n    const convertToSRT = (subtitlesArray) => {\r\n    return subtitlesArray.map((item, index) => {\r\n        return `${index + 1}\r\n${item.timestamp}\r\n${item.original}\r\n${item.translated}\r\n` // 此处前面不应该有空行\r\n    }).join('')\r\n    }\r\n\r\n    const downloadSRT = () => {\r\n    const srtContent = convertToSRT(translated_subtitles.value)\r\n    const blob = new Blob([srtContent], { type: 'text/plain;charset=utf-8' })\r\n    const url = URL.createObjectURL(blob)\r\n\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = 'subtitles.srt'\r\n    a.click()\r\n\r\n    URL.revokeObjectURL(url)\r\n    }\r\n\r\n    return {\r\n      fileInput,\r\n      File,\r\n      videoSrc,\r\n      isProcessing,\r\n      original_subtitles,\r\n      translated_subtitles,\r\n      isTranslated,\r\n      triggerFileUpload,\r\n      handleFileChange,\r\n      readSubtitleFile,\r\n      handleDrop,\r\n      startProcessing,\r\n      convertToSRT,\r\n      downloadSRT,\r\n    };\r\n    // 这表示：你希望这些变量和方法可以在 <template> 中被访问和使用。\r\n    // 实际上你使用script setup 时，所有在 setup 函数中定义的变量和方法都会自动暴露到模板中。\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Title */\r\n.tight-title {\r\n  margin: 10px 0;\r\n  line-height: 1;\r\n}\r\n\r\n/* Global Styling */\r\n:root {\r\n  --primary-color: #4A90E2;\r\n  --secondary-color: #50E3C2;\r\n  --background-color: #f4f7f9;\r\n  --text-color: #333;\r\n  --border-color: #dbe2e8;\r\n  --card-bg-color: #ffffff;\r\n  --font-family: 'Helvetica Neue', Arial, sans-serif;\r\n}\r\n\r\nbody {\r\n  font-family: var(--font-family);\r\n  background-color: var(--background-color);\r\n  color: var(--text-color);\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n#app-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n/* Header */\r\n.app-header {\r\n  text-align: center;\r\n  margin-bottom: 2.5rem;\r\n  border-bottom: 1px solid var(--border-color);\r\n  padding-bottom: 1.5rem;\r\n}\r\n\r\n.app-header h1 {\r\n  font-size: 2.5rem;\r\n  color: var(--primary-color);\r\n  margin: 0;\r\n}\r\n\r\n.app-header .subtitle {\r\n  font-size: 1rem;\r\n  color: #777;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n/* Main Content Layout */\r\n.main-content {\r\n  display: flex;\r\n  gap: 2rem;\r\n  flex-wrap: stretch;\r\n}\r\n\r\n.upload-section, .display-section {\r\n  background-color: var(--card-bg-color);\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n  padding: 2rem;\r\n}\r\n\r\n.upload-section {\r\n  flex: 1;\r\n  min-width: 350px;\r\n  flex-direction: column;\r\n}\r\n\r\n.display-section {\r\n  flex: 2;\r\n  min-width: 600px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n/* Upload Box */\r\n.upload-box {\r\n  border: 2px dashed var(--border-color);\r\n  border-radius: 10px;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  height: stretch;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.upload-box:hover {\r\n  border-color: var(--primary-color);\r\n  background-color: #f9fcff;\r\n}\r\n\r\n.upload-icon {\r\n  color: var(--primary-color);\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-button {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  transition: background-color 0.3s ease;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #357abd;\r\n}\r\n\r\n.file-info {\r\n  color: #888;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.file-details p {\r\n    word-break: break-all;\r\n    background-color: #f0f0f0;\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n}\r\n\r\n.process-button {\r\n    background-color: var(--secondary-color);\r\n    color: white;\r\n    border: none;\r\n    padding: 0.8rem 2rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    transition: background-color 0.3s ease;\r\n    margin-top: 1rem;\r\n}\r\n\r\n.process-button:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\n/* Display Section */\r\n.video-player-container, .subtitle-display-container {\r\n  width: 100%;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  background-color: #000;\r\n}\r\n\r\n.video-placeholder {\r\n  width: 100%;\r\n  height: 350px;\r\n  background-color: #e9ecef;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #6c757d;\r\n}\r\n\r\n.subtitle-area {\r\n  height: 300px;\r\n  overflow-y: auto;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.subtitle-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  color: #888;\r\n}\r\n\r\n.subtitle-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.subtitle-item {\r\n  margin-bottom: 1.2rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n.subtitle-item:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  font-family: monospace;\r\n  margin-bottom: 0.4rem;\r\n  display: block;\r\n}\r\n\r\n.text-original {\r\n  font-size: 1rem;\r\n  color: #333;\r\n  margin: 0 0 0.3rem 0;\r\n}\r\n\r\n.text-translated {\r\n  font-size: 1rem;\r\n  color: var(--primary-color);\r\n  font-weight: 500;\r\n  margin: 0;\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}