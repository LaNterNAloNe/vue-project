{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"main-content\"\n};\nconst _hoisted_3 = {\n  class: \"upload-section\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"upload-prompt\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"file-details\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  class: \"display-section\"\n};\nconst _hoisted_8 = {\n  class: \"video-player-container\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"video-placeholder\"\n};\nconst _hoisted_11 = {\n  class: \"subtitle-display-container\"\n};\nconst _hoisted_12 = {\n  class: \"subtitle-area\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"subtitle-placeholder\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"subtitle-list\"\n};\nconst _hoisted_15 = {\n  class: \"timestamp\"\n};\nconst _hoisted_16 = {\n  class: \"text-original\"\n};\nconst _hoisted_17 = {\n  class: \"text-translated\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[12] || (_cache[12] = _createElementVNode(\"header\", {\n    class: \"app-header\"\n  }, [_createElementVNode(\"h1\", null, \"中国网络微短剧英译智能体\"), _createElementVNode(\"p\", {\n    class: \"subtitle\"\n  }, \"AI-Powered Chinese Short Drama Translation Agent\")], -1 /* CACHED */)), _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"section\", _hoisted_3, [_createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"file-upload\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $setup.handleFileChange && $setup.handleFileChange(...args)),\n    accept: \"video/*\",\n    ref: \"fileInput\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"div\", {\n    class: \"upload-box\",\n    onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[4] || (_cache[4] = _withModifiers((...args) => $setup.handleDrop && $setup.handleDrop(...args), [\"prevent\"]))\n  }, [!$setup.videoFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"64\",\n    height: \"64\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    class: \"upload-icon\"\n  }, [_createElementVNode(\"path\", {\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n  }), _createElementVNode(\"polyline\", {\n    points: \"17 8 12 3 7 8\"\n  }), _createElementVNode(\"line\", {\n    x1: \"12\",\n    y1: \"3\",\n    x2: \"12\",\n    y2: \"15\"\n  })], -1 /* CACHED */)), _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"将文本或字幕文件拖拽到此处，或\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.triggerFileUpload && $setup.triggerFileUpload(...args)),\n    class: \"upload-button\"\n  }, \"选择文件\"), _cache[7] || (_cache[7] = _createElementVNode(\"small\", {\n    class: \"file-info\"\n  }, \"支持 txt , srt 等格式\", -1 /* CACHED */))])) : _createCommentVNode(\"v-if\", true), $setup.videoFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"h4\", null, \"已选择文件:\", -1 /* CACHED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.videoFile.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.startProcessing && $setup.startProcessing(...args)),\n    class: \"process-button\",\n    disabled: $setup.isProcessing\n  }, _toDisplayString($setup.isProcessing ? '处理中...' : '开始翻译'), 9 /* TEXT, PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"section\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [$setup.videoSrc ? (_openBlock(), _createElementBlock(\"video\", {\n    key: 0,\n    src: $setup.videoSrc,\n    controls: \"\",\n    class: \"video-player\"\n  }, null, 8 /* PROPS */, _hoisted_9)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[9] || (_cache[9] = [_createElementVNode(\"p\", null, \"上传的文本或字幕文件将在此预览...\", -1 /* CACHED */)])))]), _createElementVNode(\"div\", _hoisted_11, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"翻译字幕预览 (Subtitle Preview)\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_12, [$setup.subtitles.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _cache[10] || (_cache[10] = [_createElementVNode(\"p\", null, \"翻译生成的字幕将在此显示...\", -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"ul\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.subtitles, (subtitle, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"subtitle-item\"\n    }, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString(subtitle.timestamp), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_16, _toDisplayString(subtitle.original), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_17, _toDisplayString(subtitle.translated), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]))])])])])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","type","onChange","_cache","args","$setup","handleFileChange","accept","ref","style","onDragover","_withModifiers","onDrop","handleDrop","videoFile","_hoisted_4","xmlns","width","height","viewBox","fill","stroke","d","points","x1","y1","x2","y2","onClick","triggerFileUpload","_hoisted_5","_toDisplayString","name","startProcessing","disabled","isProcessing","_hoisted_6","_hoisted_7","_hoisted_8","videoSrc","src","controls","_hoisted_10","_hoisted_11","_hoisted_12","subtitles","length","_hoisted_13","_hoisted_14","_Fragment","_renderList","subtitle","index","key","_hoisted_15","timestamp","_hoisted_16","original","_hoisted_17","translated"],"sources":["C:\\NewFiles\\Vue3\\vue-project\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app-container\">\r\n    <header class=\"app-header\">\r\n      <h1>中国网络微短剧英译智能体</h1>\r\n      <p class=\"subtitle\">AI-Powered Chinese Short Drama Translation Agent</p>\r\n    </header>\r\n\r\n    <main class=\"main-content\">\r\n      <section class=\"upload-section\">\r\n        <input type=\"file\" id=\"file-upload\" @change=\"handleFileChange\" accept=\"video/*\" ref=\"fileInput\" style=\"display: none;\">\r\n        <div class=\"upload-box\" @dragover.prevent @drop.prevent=\"handleDrop\">\r\n          \r\n          \r\n          <div v-if=\"!videoFile\" class=\"upload-prompt\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"upload-icon\"><path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path><polyline points=\"17 8 12 3 7 8\"></polyline><line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line></svg>\r\n            <p>将文本或字幕文件拖拽到此处，或</p>\r\n            <button @click=\"triggerFileUpload\" class=\"upload-button\">选择文件</button>\r\n            <small class=\"file-info\">支持 txt , srt 等格式</small>\r\n          </div>\r\n\r\n          <div v-if=\"videoFile\" class=\"file-details\">\r\n            <h4>已选择文件:</h4>\r\n            <p>{{ videoFile.name }}</p>\r\n            <button @click=\"startProcessing\" class=\"process-button\" :disabled=\"isProcessing\">\r\n              {{ isProcessing ? '处理中...' : '开始翻译' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"display-section\">\r\n        <div class=\"video-player-container\">\r\n          <video v-if=\"videoSrc\" :src=\"videoSrc\" controls class=\"video-player\"></video>\r\n          <div v-else class=\"video-placeholder\">\r\n            <p>上传的文本或字幕文件将在此预览...</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"subtitle-display-container\">\r\n          <h3>翻译字幕预览 (Subtitle Preview)</h3>\r\n          <div class=\"subtitle-area\">\r\n            <div v-if=\"subtitles.length === 0\" class=\"subtitle-placeholder\">\r\n              <p>翻译生成的字幕将在此显示...</p>\r\n            </div>\r\n            <ul v-else class=\"subtitle-list\">\r\n              <li v-for=\"(subtitle, index) in subtitles\" :key=\"index\" class=\"subtitle-item\">\r\n                <span class=\"timestamp\">{{ subtitle.timestamp }}</span>\r\n                <p class=\"text-original\">{{ subtitle.original }}</p>\r\n                <p class=\"text-translated\">{{ subtitle.translated }}</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ElMessage } from 'element-plus';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  setup() {\r\n    const fileInput = ref(null);\r\n    const videoFile = ref(null);\r\n    const videoSrc = ref('');\r\n    const isProcessing = ref(false);\r\n    \r\n    // Placeholder for subtitle data\r\n    const subtitles = ref([\r\n      // Example data structure\r\n      // { timestamp: '00:00:01,234 --> 00:00:03,456', original: '你好！', translated: 'Hello!' },\r\n      // { timestamp: '00:00:04,000 --> 00:00:06,789', original: '今天天气真好。', translated: 'The weather is great today.' }\r\n    ]);\r\n\r\n    const triggerFileUpload = () => {\r\n      fileInput.value.click();\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n      const file = event.target.files[0];\r\n      if (file && file.type.startsWith('video/')) {\r\n        videoFile.value = file;\r\n        videoSrc.value = URL.createObjectURL(file);\r\n      } else {\r\n        ElMessage.warning('请选择一个有效的视频文件！');\r\n      }\r\n    };\r\n    \r\n    const handleDrop = (event) => {\r\n        const file = event.dataTransfer.files[0];\r\n        if (file && file.type.startsWith('video/')) {\r\n            videoFile.value = file;\r\n            videoSrc.value = URL.createObjectURL(file);\r\n        } else {\r\n            ElMessage.warning('请拖入一个有效的视频文件！');\r\n        }\r\n    };\r\n\r\n    const startProcessing = () => {\r\n      if (!videoFile.value) {\r\n        ElMessage.warning('请先选择一个文件！');\r\n        return;\r\n      }\r\n      isProcessing.value = true;\r\n      console.log('开始处理文件:', videoFile.value.name);\r\n      \r\n      // --- API Integration Placeholder ---\r\n      // 1. Upload file to server\r\n      // 2. Poll for processing status\r\n      // 3. On success, fetch subtitle data\r\n      // ------------------------------------\r\n\r\n      // Simulate API call and receiving data\r\n      setTimeout(() => {\r\n        subtitles.value = [\r\n          { timestamp: '00:00:01,234 --> 00:00:03,456', original: '你好！', translated: 'Hello!' },\r\n          { timestamp: '00:00:04,000 --> 00:00:06,789', original: '今天天气真好。', translated: 'The weather is great today.' },\r\n          { timestamp: '00:00:07,100 --> 00:00:09,500', original: '我们去公园吧。', translated: \"Let's go to the park.\" }\r\n        ];\r\n        isProcessing.value = false;\r\n        ElMessage.success('处理完成');\r\n      }, 3000); // Simulate a 3-second processing time\r\n    };\r\n\r\n    return {\r\n      fileInput,\r\n      videoFile,\r\n      videoSrc,\r\n      isProcessing,\r\n      subtitles,\r\n      triggerFileUpload,\r\n      handleFileChange,\r\n      handleDrop,\r\n      startProcessing\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Global Styling */\r\n:root {\r\n  --primary-color: #4A90E2;\r\n  --secondary-color: #50E3C2;\r\n  --background-color: #f4f7f9;\r\n  --text-color: #333;\r\n  --border-color: #dbe2e8;\r\n  --card-bg-color: #ffffff;\r\n  --font-family: 'Helvetica Neue', Arial, sans-serif;\r\n}\r\n\r\nbody {\r\n  font-family: var(--font-family);\r\n  background-color: var(--background-color);\r\n  color: var(--text-color);\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n#app-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n/* Header */\r\n.app-header {\r\n  text-align: center;\r\n  margin-bottom: 2.5rem;\r\n  border-bottom: 1px solid var(--border-color);\r\n  padding-bottom: 1.5rem;\r\n}\r\n\r\n.app-header h1 {\r\n  font-size: 2.5rem;\r\n  color: var(--primary-color);\r\n  margin: 0;\r\n}\r\n\r\n.app-header .subtitle {\r\n  font-size: 1rem;\r\n  color: #777;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n/* Main Content Layout */\r\n.main-content {\r\n  display: flex;\r\n  gap: 2rem;\r\n  flex-wrap: stretch;\r\n}\r\n\r\n.upload-section, .display-section {\r\n  background-color: var(--card-bg-color);\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n  padding: 2rem;\r\n}\r\n\r\n.upload-section {\r\n  flex: 1;\r\n  min-width: 350px;\r\n  flex-direction: column;\r\n}\r\n\r\n.display-section {\r\n  flex: 2;\r\n  min-width: 600px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n/* Upload Box */\r\n.upload-box {\r\n  border: 2px dashed var(--border-color);\r\n  border-radius: 10px;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.upload-box:hover {\r\n  border-color: var(--primary-color);\r\n  background-color: #f9fcff;\r\n}\r\n\r\n.upload-icon {\r\n  color: var(--primary-color);\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-button {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  transition: background-color 0.3s ease;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #357abd;\r\n}\r\n\r\n.file-info {\r\n  color: #888;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.file-details p {\r\n    word-break: break-all;\r\n    background-color: #f0f0f0;\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n}\r\n\r\n.process-button {\r\n    background-color: var(--secondary-color);\r\n    color: white;\r\n    border: none;\r\n    padding: 0.8rem 2rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    transition: background-color 0.3s ease;\r\n    margin-top: 1rem;\r\n}\r\n\r\n.process-button:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\n/* Display Section */\r\n.video-player-container, .subtitle-display-container {\r\n  width: 100%;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  background-color: #000;\r\n}\r\n\r\n.video-placeholder {\r\n  width: 100%;\r\n  height: 350px;\r\n  background-color: #e9ecef;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #6c757d;\r\n}\r\n\r\n.subtitle-area {\r\n  height: 300px;\r\n  overflow-y: auto;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.subtitle-placeholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  color: #888;\r\n}\r\n\r\n.subtitle-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.subtitle-item {\r\n  margin-bottom: 1.2rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n.subtitle-item:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.8rem;\r\n  color: #666;\r\n  font-family: monospace;\r\n  margin-bottom: 0.4rem;\r\n  display: block;\r\n}\r\n\r\n.text-original {\r\n  font-size: 1rem;\r\n  color: #333;\r\n  margin: 0 0 0.3rem 0;\r\n}\r\n\r\n.text-translated {\r\n  font-size: 1rem;\r\n  color: var(--primary-color);\r\n  font-weight: 500;\r\n  margin: 0;\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}